
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{

buildName 'Dev - ${BUILD_NUMBER}' 
buildDescription 'Pipeline Script - Scriptedway'

def mavenHome = tool name: "maven3.8.5"

echo "The Node name is:  ${env.NODE_NAME} "
echo "The Job  name is:  ${env.JOB_NAME} "
echo " The Build number is: ${env.BUILD_NUMBER}  "

//Checkout Stage
stage('Checkoutcode'){
git branch: 'development', credentialsId: 'e61cdacc-71a1-4e39-ab22-f0bd9370fb36', url: 'https://github.com/mss-devops-janbatch-mahesh1/maven-web-application.git'
}

//Build Stage
stage('Build'){
sh "$mavenHome/bin/mvn clean package"
}
/*
//Generate SonarQube Report
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//Upload Artifact into Artifcatory repo
stage('UploadArtifcatsIntoNexus'){
sh "$mavenHome/bin/mvn deploy"
}

//Deploy App into Tomcat Server
stage('DeployAppIntoTomcat'){
sshagent(['286f8a10-c107-4067-9013-df8bb3d317c8']) {
   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.235.91.222:/opt/apache-tomcat-9.0.59/webapps"
}
}
*/
}//Try block closing
catch(e){
currentBuild.result = "FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//Node Closing
